const N = 5

PHIL = (sitdown -> right.get -> left.get -> eat
	-> left.put -> right.put -> arise -> PHIL).

FORK = (get -> put -> FORK).


||DINERS(N=5) = forall[i:0..N-1] (phil[i]:PHIL ||
	{phil[i].left, phil[(i-1+N)%N].right}::FORK).


BUTLER(N=5) = B[0],
B[i:0..N-1] = (when(i<N-1) sitdown -> B[i+1]
				| when(i>0)   arise -> B[i-1]).

||D_B = (DINERS || {phil[0..N-1]}::BUTLER).
